// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract TicketPurchaseContract {
    uint public totalTickets = 100;
    uint public PerTicketPrice = 10;
    uint public ticketsSold;

    event TicketPurchased(address buyer, uint ticketPrice);

    function purchaseTicket(uint ticketPrice) public payable {
        // require statement
        require(ticketPrice % PerTicketPrice == 0, "Incorrect ticket price!");

        // assert statement
        assert(ticketsSold + 1 <= totalTickets);

        // ticket purchase logic
        uint numTickets = ticketPrice / PerTicketPrice;
        ticketsSold += numTickets;

        // revert statement
        if (ticketsSold > totalTickets) {
            revert("No more tickets available!");
        }

        // emit event
        emit TicketPurchased(msg.sender, ticketPrice);
    }

    function refundTicket(uint numTickets) public {
        // require statement
        require(ticketsSold >= numTickets, "Not enough tickets sold!");

        // refund ticket logic
        ticketsSold -= numTickets;
    }
}
